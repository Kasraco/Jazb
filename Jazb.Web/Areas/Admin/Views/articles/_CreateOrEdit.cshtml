



@model Jazb.DomainClasses.Entities.article

@* This partial view defines form fields that will appear when creating and editing entities *@

<div class="control-group">
    <div class="col-md-3">
        <label class="control-label">تصویر خبر:</label>
        <div class="fileupload fileupload-new" data-provides="fileupload">
            <div class="fileupload-preview thumbnail" style="width: 240px; height: 100%; min-height: 128px;">
                
            </div>
           
            <div>
                <span class="btn btn-default btn-file">
                    <span class="fileupload-new">انتخاب فایل</span>
                    <span class="fileupload-exists">تغییر</span>
                    <input type="file" id="img_Picture" name="img_Picture"  class="file-input" />
                </span>
                <a href="#" class="btn btn-danger fileupload-exists" data-dismiss="fileupload">حذف</a>
            </div>

        </div>

    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.StartDate, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control datepicker-fullscreen" })
        </div>
        @Html.ValidationMessageFor(model => model.StartDate, null, new { @class = "has-error help-block" })
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.HasExpire, new { @class = "control-label" })
        <div class="controls">
            @Html.CheckBoxFor(model => model.HasExpire, new { @class = "form-control checkbox" })
        </div>
        @Html.ValidationMessageFor(model => model.HasExpire, null, new { @class = "has-error help-block" })
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.ExpireDate, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(model => model.ExpireDate, new { @class = "form-control  datepicker-fullscreen" })
        </div>
        @Html.ValidationMessageFor(model => model.ExpireDate, null, new { @class = "has-error help-block" })
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.SourceTitle, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(model => model.SourceTitle, new { @class = "form-control" })
        </div>
        @Html.ValidationMessageFor(model => model.SourceTitle, null, new { @class = "has-error help-block" })
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.SourceUrl, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(model => model.SourceUrl, new { @class = "form-control" })
        </div>
        @Html.ValidationMessageFor(model => model.SourceUrl, null, new { @class = "has-error help-block" })
    </div>
    

    <div class="control-group">
        @Html.LabelFor(model => model.AttachmentFile, new { @class = "control-label" })
        <div class="controls">
            <input type="file" id="fil_AttachmentFile" name="fil_AttachmentFile" class="file-input" />
        </div>
    </div>

    
    <div class="control-group">
        @Html.LabelFor(model => model.Title, new { @class = "control-label" })
        <div class="controls">
            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
        </div>
        @Html.ValidationMessageFor(model => model.Title, null, new { @class = "has-error help-block" })
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.MinBody, new { @class = "control-label" })
        <div class="controls">
            @Html.TextAreaFor(model => model.MinBody, new { @class = "form-control", style = "min-height:100px" })
        </div>
        @Html.ValidationMessageFor(model => model.MinBody, null, new { @class = "has-error help-block" })
    </div>
    <div class="control-group">
        @Html.LabelFor(model => model.Body, new { @class = "control-label" })
        <div class="controls">
            @Html.TextAreaFor(model => model.Body, new { style = "width:98%; min-height:500px" })
        </div>
        @Html.ValidationMessageFor(model => model.Body, null, new { @class = "has-error help-block" })
    </div>
    <div class="control-group">

        <div class="controls">

        </div>

    </div>


    </div>
